<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendrier Interactif</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        table {
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
            width: 50px;
        }
        th {
            background-color: #f2f2f2;
        }
        td:hover {
            cursor: pointer;
            background-color: #e6e6e6;
        }
    </style>
</head>
<body>
    <h1>Calendrier Interactif</h1>
    <table id="calendar">
        <thead>
            <tr>
                <th>Lu</th>
                <th>Ma</th>
                <th>Mer</th>
                <th>Je</th>
                <th>Ve</th>
                <th>Sa</th>
                <th>Di</th>
            </tr>
        </thead>
        <tbody id="calendar-body">
            <!-- Les dates seront ajoutées ici par JavaScript -->
        </tbody>
    </table>

    <script>
        // Remplacez ces valeurs par votre ID de feuille et clé API
        const SHEET_ID = '1i9L8f83fnMzIFUVoTJlPtGbylm3Lf8Md7Ph7LkC74nA';
        const API_KEY = 'AIzaSyBYM19vbTPAi49sXzjqPJsFzhRsZHVKql8';

        // Fonction pour récupérer les données de Google Sheets
        async function fetchSheetData() {
            const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/NomDeVotreFeuille?key=${API_KEY}`);
            const data = await response.json();
            return data.values;
        }

        // Fonction pour construire le calendrier du mois courant
        function buildCalendar() {
            const date = new Date();
            const currentMonth = date.getMonth();
            const currentYear = date.getFullYear();
            const firstDay = new Date(currentYear, currentMonth, 1);
            const lastDay = new Date(currentYear, currentMonth + 1, 0);
            const daysInMonth = lastDay.getDate();
            const startDay = firstDay.getDay();

            const calendarBody = document.getElementById('calendar-body');
            calendarBody.innerHTML = ''; // Réinitialiser le contenu du corps du tableau

            // Remplir le tableau avec des cases vides pour les jours avant le début du mois
            for (let i = 0; i < startDay; i++) {
                const td = document.createElement('td');
                calendarBody.appendChild(td);
            }

            // Remplir le calendrier avec les jours du mois
            for (let day = 1; day <= daysInMonth; day++) {
                const td = document.createElement('td');
                td.textContent = day;
                td.onclick = () => handleDateClick(day, currentMonth + 1, currentYear);
                calendarBody.appendChild(td);
            }
        }

        // Fonction pour gérer le clic sur une date
        async function handleDateClick(day, month, year) {
            const dateStr = `${day}/${month}/${year}`; // Format de la date (JJ/MM/AAAA)
            const data = await fetchSheetData();
            
            // Rechercher la tâche associée à cette date
            const task = data.find(row => row[0] === dateStr);
            if (task) {
                alert(`Tâche pour le ${dateStr} : ${task[1]}`);
            } else {
                alert(`Aucune tâche pour le ${dateStr}.`);
            }
        }

        // Appeler la fonction pour construire le calendrier
        buildCalendar();
    </script>
</body>
</html>
