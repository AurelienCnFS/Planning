<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Permanence num√©rique du jour</title>
    <style>
        body {
            text-align: center; /* Centre tout le texte sur la page */
            font-family: Arial, sans-serif; /* Ajoute une police lisible */
            font-size: 18px; /* Augmente la taille de la police par 3 (taille initiale 6px approximativement) */
        }
        h2 {
            color: #003366; /* Bleu fonc√© */
            font-size: 1.5em; /* R√©duit la taille de la police du titre de moiti√© */
        }
        #result {
            margin-top: 20px;
        }
    </style>
    <script>
        const SHEET_ID = '1i9L8f83fnMzIFUVoTJlPtGbylm3Lf8Md7Ph7LkC74nA';
        const API_KEY = 'AIzaSyBYM19vbTPAi49sXzjqPJsFzhRsZHVKql8';
        const RANGE = 'A:D';

        async function fetchPlanning() {
            // Obtenir la date actuelle au format JJ/MM/AAAA
            const today = new Date().toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' });

            console.log("Date actuelle :", today);

            const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;
            try {
                const response = await fetch(url);
                const data = await response.json();

                const rows = data.values;
                console.log("Donn√©es r√©cup√©r√©es :", rows);

                if (!rows || rows.length <= 1) {
                    document.getElementById('result').innerHTML = "<p>Aucune donn√©e disponible.</p>";
                    return;
                }

                // Parcourir les donn√©es pour trouver la permanence du jour
                const headers = rows[0]; // En-t√™tes
                const entries = rows.slice(1); // Donn√©es sans en-t√™tes

                const permanenceDuJour = entries.find(row => row[0] === today);

                const resultDiv = document.getElementById('result');
                let resultHTML = `<h2>Permanence num√©rique du jour</h2>`;

                if (permanenceDuJour) {
                    // V√©rifier si les informations sont vides et ajuster l'affichage en cons√©quence
                    const village = permanenceDuJour[1];
                    const heure = permanenceDuJour[2];
                    const lieu = permanenceDuJour[3];

                    // Si une des valeurs est vide, afficher "Aucune permanence n'est pr√©vue pour aujourd'hui"
                    if (!village || !heure || !lieu) {
                        resultHTML += "<p>Aucune permanence n'est pr√©vue pour aujourd'hui.</p>";
                    } else {
                        resultHTML += ` 
                            <p>üìÖ Date : ${permanenceDuJour[0]}</p>
                            <p>üèòÔ∏è Village : ${village}</p>
                            <p>‚è∞ Heure : ${heure}</p>
                            <p>üìç Lieu : ${lieu}</p>
                        `;
                    }
                } else {
                    resultHTML += "<p>Aucune permanence n'est pr√©vue pour aujourd'hui.</p>";
                }

                resultDiv.innerHTML = resultHTML;

            } catch (error) {
                console.error("Erreur lors de la r√©cup√©ration des donn√©es :", error);
                document.getElementById('result').innerHTML = "<p>Erreur lors de la r√©cup√©ration des donn√©es.</p>";
            }
        }

        window.onload = fetchPlanning;
    </script>
</head>
<body>
    <div id="result">Chargement...</div>
</body>
</html>
